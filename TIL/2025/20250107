Item80.스레드보다는 실행자, 태스크, 스트림을 애용하라

동일한 자원을 공유하는 여러 쓰레드가 번갈아 동작할 떄, 어떤 task 가 먼저 실행될지 알수가 없다. 
Thread, Runnable 을 무작성 생성하여 멀티쓰레드 프로그래밍을 하다보면 동시성 문제를 겪게 된다.

스레드를 직접 다루지 말자
 - 작업 큐를 직접 만들거나 스레드를 직접 다루는 것도 일반적으로 삼가야 한다.
 - 스레드를 직접 다루지말고 실행자 프레임워크를 이용하자. 그러면 작업 단위와 실행 매커니즘을 분리할 수 있는다. 작업 단위는 Runnable과 Callable로 나눌 수 있다.
 - 자바 7부터 실행자 프레임워크는 포크-조인(fork-join) 태스크를 지원하도록 확장됐다.
  - ForkJoinTask의 인스턴스는 작은 하위 태스크로 나뉠 수 있고 ForkJoinPool을 구성하는 스레드들이 이 태스크들을 처리하며, 
  - 일을 먼저 끝낸 스레드가 다른 스레드의 남은 태스크를 가져와 대신 처리할 수도 있다.

item19 상속을 고려해 설계하고 문서화하라. 그러지 않았다면 상속을 금지하라

상속용 클래스를 설계하는 데에는 복잡한 과정이 있다. 따라서 클래스 내부에서 스스로를 어떻게 사용하는지(자기사용 패턴) 모두 문서로 남겨야한다.
효율 좋은 하위 클래스를 만들 수 있도록 일부 메서드를 protected로 제공하는 경우도 있다.
특히 내부 동작과정 중 끼어 들 수 있는 Hook을 잘 선별한다.
상속용으로 설계한 클래스는 배포 전에 반드시 하위 클래스를 만들어 검증한다.
클래스를 확장해야할 명확한 이유가 없다면 상속을 금지하는 편이 낫다. 
이 때는 클래스를 final로 선언하거나 생성자 모두를 외부에서 접근할 수 없도록 package-pricate 이나 private 하게 만들고 public 정적 팩터리를 만들어주는 방법이 있다.
상속용 클래스의 생성자는 재정의 가능 메서드를 호출하면 안된다.
Cloneable과 Serializable 인터페이스를 상속용 클래스에서 구현한다면 주의하자.

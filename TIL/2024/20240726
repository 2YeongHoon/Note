Item34. Int 상수 대신 열거 타입을 사용하라

정수 열거의 단점
1. 타입 안정성을 보장할 수 없으며 표현력도 좋지 않다.
컴파일러 입장에서는 APPLE_FUJI나 ORANGE_NAVEL은 모두 같은 0을 나타내기 때문에 동등 연산자(==)로 비교하더라도 아무런 경고를 발생시키지 않는다. 
즉, APPLE_FUJI가 전달되어야 할 값에 ORANGE_NAVEL가 전달되어도 아무런 문제 없이 컴파일된다는 뜻이다. 따라서 타입 안정성을 보장할 수 없다.

2. 정수 열거 패턴을 사용한 프로그램은 깨지기 쉽다.
정수 열거 패턴은 상수를 나열한 것뿐이라 컴파일 후 상수의 값이 바뀐다면 다시 컴파일해줘야 한다. 
컴파일 시 값이 클라이언트 파일에 그대로 새겨지기 때문이다. 만약 상수 값이 변경된 후 다시 컴파일하지 않는다면, 클라이언트는 엉뚱하게 동작하는 프로그램을 만날 수 있다.

3. 문자열로 출력하기 까다롭다.
값을 출력하거나 디버깅할 때 단지 숫자로 값이 표현되기 때문에 그다지 도움이 되지 않는다.

열거타입 장점
1. 인스턴스가 하나씩만 존재함을 보장한다.
앞서 말했 듯, 생성자를 제공하지 않기 때문에 인스턴스를 생성하거나 확장할 수 없다.
따라서 인스턴스가 하나씩만 존재함을 보장한다. 따라서 열거 타입은 인스턴스 통제된다. 
싱글턴은 원소가 하나뿐인 열거 타입이라 할 수 있고, 열거 타입은 싱글턴을 일반화한 형태라고 할 수 있다.

2. 타입 안정성을 제공한다.
3. namespace를 제공한다.
4. 열거 타입의 toString메서드는 출력하기에 적절한 문자열을 내어준다.
5. 임의의 메서드나 필드를 추가할 수 있고, 인터페이스를 구현할 수 있다.
6. 열거 타입의 상수를 제거해도 참조하지 않는 클라이언트는 아무 영향이 없다.
 - 컴파일 에러 정도..?
